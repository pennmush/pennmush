& PUEBLO
  Pueblo is a client made by Chaco (a now defunct company). It attempts to 
  mix HTML with MUSH. There are other clients (notably MUSHclient) that also 
  offer Pueblo features. PennMUSH can offer support for some of the enhanced 
  features of Pueblo, enabled via the 'pueblo' @config option.

  PennMUSH will automatically detect a Pueblo client (rather, the client will
  announce itself and PennMUSH will detect that), and set up that connection 
  for Pueblo use. 

Continued in 'help pueblo2'.
& PUEBLO2
  PennMUSH makes the following enhancements visible to Pueblo users when
  Pueblo support is enabled:

    * Object/Room names are highlighted
    * Support for VRML graphics
    * Unordered list for contents and transparent exits
    * Contents and exits lists have links (Click an exit to walk through it)
    * Object lists (like the ones found in 'examine'/'inventory') have links

  While Pueblo brings a number of new features and markups to MUSHes, in many
  ways it's not well suited. Because it's based on HTML, multiple spaces are
  compressed, and Pueblo typically defaults to a variable width font. Because
  of this, supporting Pueblo is not just a matter of enabling the option. The
  output of any commands which rely on fixed spacing, such as a +who, must be
  wrapped in <pre> tags to ensure they appear correctly for players using
  Pueblo. For instance:
  
    > &cmd`who Globals=$+who: @nspemit %#=tagwrap(pre, u(fun`who))

See also: pueblo(), HTML Functions
& HTML
  Hyper Text Markup Language (http://www.w3.org)

  The only HTML implementation supported by the MUSH is the one supported by
  Pueblo (see 'help pueblo' for more info). To utilize HTML, use one of the 
  MUSH HTML Functions (see 'HTML Functions' for a list).

  HTML tags are stripped when sent to non-HTML capable players.

See also: HTML Functions, PUEBLO, html()
& PUEBLO()
  pueblo(<player|descriptor>)
  
  This function returns 1 if the given player or descriptor is currently 
  Pueblo-enabled, and 0 otherwise. See_All objects can check the Pueblo
  status of any connection; mortals can only use it on their own connections.
  
  If used on a player/descriptor which is not connected, or which you don't
  have permission to check, pueblo() returns #-1 NOT CONNECTED.
  
  When used with a <player> argument, the most recently active connection is
  used if the <player> is logged in more than once.
  
See also: terminfo(), html(), PUEBLO
& @VRML_URL
& VRML_URL
& VRML
  @vrml_url <object>[=<url>]

  The VRML_URL attribute provides an object (usually a room) with a VRML
  world. When someone using a Pueblo-enabled client looks at the object,
  the VRML World listed in @VRML_URL will be loaded.

  Example:
  > @vrml_url here=http://www.pennmush.org/pennmush.vrml

  To learn about the VRML Format, have a look at the Pueblo Help, which
  mentions several good sites for learning.

See also: HTML, PUEBLO
& HTML FUNCTIONS
  HTML Functions are used to output HTML tags to HTML capable users. These 
  tags will be stripped by the system for anything non-HTML related. These 
  functions are only available when Pueblo support is enabled (see 
  '@config pueblo').

  html()         tag()          endtag()       tagwrap()

  Examples:
    > say [html(a href="http://www.pennmush.org")]PennMUSH[html(/a)]
    > say [tag(a,href="http://www.pennmush.org")]PennMUSH[endtag(a)]
    > say [tagwrap(a,href="http://www.pennmush.org",PennMUSH)]

  Each of these produces the HTML output:
    <a href="http://www.pennmush.org">PennMUSH</a>

  Mortals are restricted in the tags they may use. Most standard HTML tags 
  are ok; protocol-specific tags like SEND and XCH_CMD can only be sent by 
  Wizards or those with the Pueblo_Send @power.
& HTML()
  html(<string>)

  This wizard-only function will output <string> as an HTML Tag.

  Example:
    > think html(b)Foo[html(/b)]

  Will output (in HTML):
    <b>Foo</b>

  Non-wizards should see the tag(), endtag(), and tagwrap() functions, which
  are similar but can be used by mortals.
  
See also: PUEBLO, HTML, HTML Functions
& TAG()
  tag(<name>[, <param1>[, ... , <paramN>]])

  This function outputs the named HTML/Pueblo tag with the given paramaters.

  Example:
   tag(img,src="http://www.pennmush.org/image.jpg",align="left",width="300")

  Will output (in HTML):
    <img src="http://www.pennmush.org/image.jpg" align="left" width="300">

See also: endtag(), tagwrap(), html()
& ENDTAG()
  endtag(<name>)


  Outputs a closing HTML/Pueblo tag for the named tag.

  Example:
   endtag(b)

  Will output (in HTML):
   </b>

See also: tag(), tagwrap(), html()
& TAGWRAP()
Function: tagwrap(<name>[,<parameters>],<string>)

  This function outputs <string>, wrapped in the <name> HTML/Pueblo tag
  with the specified <paramaters>.

  Example:
    tagwrap(a,href="http://download.pennmush.org",PennMUSH Downloads)]
   
  Will output (in HTML):
    <a href="http://download.pennmush.org">PennMUSH Downloads</a>

  A particularly important use of this function is tagwrap(pre, <string>).
  Because Pueblo works like an html browser, spaces and tabs are compressed
  to a single space. If you have code (a +who function, for example) that
  relies on exact spacing, surround its output with a tagwrap(pre,...)
  so that Pueblo will render it as "preformatted" text.
  
See also: tag(), endtag(), html()
