& 1.8.4p2
& changes
This is a list of changes in this patchlevel which are probably of
interest to players. More information about new commands and functions
can probably be gotten via 'help <name of whatever>'. 'help credits'
lists the [initials] of developers and porters that are used in the list 
of changes.

Information about changes in prior releases can be found under
help topics named for each release (e.g. 'help 1.7.2p30').
A list of the patchlevels associated with each release can
be read in 'help patchlevels'.

Version 1.8.4 patchlevel 2                                 Dec ??,  2010

Major Changes:
 * Wildcard matcher completely rewritten to avoid hangs and to provide
   ansi-aware capturing. [GM]
 * connection_fail_limit now lets you limit the # of connection fails in
   a 10 minute time by any given IP. [GM]

Minor Changes:
 * update-cnf.pl perl script now handles optional config lines, by placing
   A # OPTIONAL above them. This is for message translation. [GM]
 * Config options can now be marked as optional. If they don't exist,
   Penn will not complain in the log. [MG]
 * Player names with spaces no longer need to be in given in quotes for
   @name. Suggested by Minion. [MG]
 * @decompile no longer shows flags which can't be set by players, like
   GOING and CONNECTED. [MG]
 * %il substitution as preparation to get rid of ##. [GM]
 * hardcode: call_attrib is now a wrapper around call_ufun. [GM]
 * The %i<n> substitution, and itext()/inum()/ilev() functions, now work
   for @dolist as well as iter(). [MG]
 * iter() context (itext(), inum(), etc) is no longer propagated through
   ufuns. [MG]
 * @hook/overrides on huh_command are now matched against "huh_command" and
   "huh_command <input>". From a suggestion by Mercutio. [MG]
 * Various help fixes.
 * @list and list() can now show only built-in or only local commands or
   functions. Suggested by Trelane@M*U*S*H. [MG]
 * Mortals can now use @search to find any objects they can examine.
   Suggested by Paige. [MG]
 * @function names can start with numbers again. Requested by Mercutio. [MG]
 * @include and @break now work when entered directly from a client. [MG]
 * The Drop and Give @locks now trigger verb <name>_LOCK`FAILURE attributes
   when you fail to pass them, as described in 'help failure'. Suggested by 
   Cas@BeforeTheDarkness. [MG]
 * Set several attributes used internally AF_NOCOPY so they won't be included
   in @decompile output. Suggested by Paige. [GM]
 * The help for the chat system (@channel) has been rewritten. [MG]
 * autodetect_list now returns 'm' sort for unknown list types instead of
   alphanum, so sorting on strings will now treat numbers in them as
   separate comparisons by default. [GM]
 * setunion(), setdiff(), setinter() now autodetect lists in all cases where
   no sort type is provided instead of just some cases. [GM]
 * The pipe (|) character is no longer valid in channel names. [MG]

Functions:
 * ibreak(), for breaking out of an iter() loop. [Rhost] [MG]
 * New stext() function and %$N sub, equivilent of #$ in @switch, switch*(),
   and reswitch*(), but can be used in nested switches/on user input. [MG]
 * New slev() function, returns the current nesting depth of switches. [MG]
 * maillist() returns a list of @mail messages matching a range, as per
   @mail/list. Suggested by AnneLions. [MG]
 * New sorttype, lattr, sorts a list of attribute names. [MG]

Commands:
 * @channel/combine and @channel/uncombine let you combine spammy connect
   messages for channels into one line. [SW] [GM]
 * @grep now accepts /wild and /regexp switches, for wildcard/globbing and
   regular expression greps (a la wildgrep() and regrep()). Also /nocase
   for case-insensitive greps. Suggested by Paige. [MG]
 * @attribute now allows limiting attribute values through /enum and
   /limit switches. [GM]
 * @ps <pid> shows info for a single queue entry. Suggested by Paige. [MG]
   
Fixes:
 * Debug output was sometimes sent to the wrong executor. [GM]
 * A crashbug in @search was fixed. Reported by Paige. [GM]
 * A crashbug in lpids() was fixed. Reported by Mercutio. Fixed by Javelin.
 * @search elock class failed to report invalid lock strings. Fixed. [GM]
 * @cpattr and @mvattr could break attribute trees. Reported by Sketch. [MG]
 * benchmark() calculated the average incorrectly. Reported by Cheetah. [DC]
 * map(), iter(), mix() and step() are ansi-aware, now. Using any of the
   list functions without ansi should also be considerably faster. [GM]
 * "look <container>'s <object>" incorrectly stopped working in p1 when
   <object>'s desc was set "nearby". Reported by Yuriko@M*U*SH. [MG]
 * Attribute names are now sorted better with regard to attribute trees,
   hopefully fixing the recurring bug of @wipe leaving branch attributes
   when removing a root attr for good. [MG]

& 1.8.4p1
Version 1.8.4 patchlevel 1                                 Sep 05,  2010

Major Changes:
 * You can now do the equivilent of @command/add, @hook, @function and
   @attribute/access from alias.cnf and restrict.cnf, to add/configure
   commands, functions and standard attributes. Suggested by Paige. [MG]
 * Exits now use @alias for alternate names. The old style of
   including aliases directly in names is still supported, but
   depreciated in new construction. Suggested by [MG]. [SW]

Minor Changes:
 * @power now reports when you try and set a power which is already set (or
   clear one which isn't set), similar to @set. Suggested by Paige. [MG]
 * Sorting methods now take - as a prefix to sort type in order to sort
   in descending order. Suggested by Minion. [GM]
 * The matching code no longer matches players who aren't nearby with
   "*playername" when MAT_NEAR is given, more in line with other checks.
   (This has virtually no impact for most players.) [MG]
 * The internal pe_info (which manages the function invocation limit, among
   other things) is now managed per-queue, not per-command argument. [MG]
 * @chan/decompile now uses "*name" for players, and dbrefs for other
   objects, when printing "@chan/on" statements. [MG]
 * cpu_limit now works on Cygwin (though not quite as well as on unix).
   A slightly higher limit may be needed than other platforms. [MG]
 * The output from say, pose, semipose and @emit is now passed through the
   SPEECHMOD attribute before being outputted. Suggested by Paige, based on
   MUX and TinyMUSH. [MG]
 * @config/list now accepts wildcard patterns to match against option names.
   Suggested by Trinsec. [MG]
 * The dreaded <Output flushed> message should show up a lot less frequently
   on spammy debug output and the like. By popular demand. [SW]
 * Added support for MSSP (Mud Server Status Protocol), based on patches by
   Javelin and Teal. See mush.cnf for details. [MG]
 * The script for updating config files is smarter about adding new alias
   lines. [SW]
 * @search now only charges for elock searches which use eval or indirect
   locks.
 * Added @mail/unread, to mark mail you've already read as new, and 
   @mail/status to change read/cleared/tagged status for messages.. Suggested
   by qa'toq. [MG]

Commands:
 * Add /preserve switch to @chzone and @chzoneall, like @chown/preserve.
 * Rooms/exits must now have an @COST attribute in order to be given
   pennies. Use @cost <ancestor>=%0 to enable giving to all rooms/exits. [MG]
 * with/room can now check for commands in the Master Room or your ZMR, and
   with can check for commands on your ZMT. [MG]
 * @sitelock/register <host> now sets the access rules for <host> to be
   "!create register", rather than "!create". Suggested by Trinsec. [MG]
   
Functions:
 * remit() now works like @remit/list. Suggested by Minion. [MG]
 * rand() now accepts negative arguments again. [MG]
 * lcon() can now take a second argument to make it behave like lthings()
   or l[v]players(), or makes it return only puppets/listening objects,
   for MUX/Rhost compatability. Suggested by Bane. [MG]
 * open() can now open rooms remotely. Suggested by Minion. [MG]
 * reswitch() and co now perform $-replacements for subexpressions. [MG]

Fixes:
 * Help fixes.
 * @search's output can now include garbage objects, like lsearch().
   Reported by Minion. [MG]
 * The command parser incorrectly expanded the names of disabled built-in
   commands prior to $-command matching. Reported by Mercutio. [MG]
 * benchmark()'s average would be thrown off when the CPU limit was 
   exceeded during evaluation. Reported by Amberyl. [MG]
 * Fix a few bugs in handling of command locks. [SW]
 * Garbage objects could be matched by dbref. Reported by Paige. [MG]
 * No longer complain about reboot.db not being present when we're not
   doing a @shutdown/reboot anyway. Reported by Paige. [MG]
 * The Telnet escape code was not properly escaped when sent literally to
   Pueblo-aware clients. [MG]
 * namelist() did not accept names in quotes. Reported by Amberyl. [MG]
 * @attrib/access/retroactive could remove the 'root' flag from attribute
   trees, making nasty things happen. Reported by Cooee. [MG]
 * Fix fn() to check that the first arugment is actually the name of a
   built-in function. Reported by Time and Cheetah. [DC]
 * Nested @asserts/@breaks with no '=' would loop unintentionally.
   Reported by Minion. [MG]
 * Fixed a couple of small bugs in give/@cost. [MG]
 * You can now always look at remote objects whose descs are not set nearby,
   and can never look at remote objects with nearby descs. [MG]
 * The chatdb didn't load correctly with invalid objects on channels. [MG]
 * Fixed a crashbug in @boot on Windows. Reported by Daniel Powell. [MG]
 * %q-registers did not carry over into @includes correctly. Reported by
   Reaver. [MG]
 * Double-free in follow command fixed. Reported by Anya@ST:DW. [MG]
 * locate() sometimes returned #-2 when two objects matched, even if only
   one of them was the preferred type. Reported by Minion. [MG]


& 1.8.4p0
Version 1.8.4 patchlevel 0                                 May 09,  2010

Major Changes:
 * Commands can now be restricted with an @lock-style lock in restrict.cnf
   and @command/restrict, allowing more complex restrictions. [MG]

Minor Changes:
 * @shutdown/reboot logs who was responsible. Suggested by Kitai. [SW]
 * Rewrite of help @lock to improve clarity, by Sketch.
 * New NO_LOG flag to disable command logging on a per-object basis.
   Based on code by Teal. [SW]
 * mindb+maxdb classes for lsearch/@search no longer reset to default
   values when > db_top or < 0 is given: Instead treated as an integer
   comparison. [GM]
 * @open can now open exits in remote locations, as well as your current
   location. Suggested by Bane. [MG]
 * New OPEN_OK flag allows anyone to open exits in a room, and @lock/open
   to restrict who can. Based on patch by ranmir@M*U*S*H. [MG]
 * Master Room exits and ZMR exits now run the "goto" command, and @ealias
   and @lalias run the "enter"/"leave" commands, so @hooks get run, command
   restrictions checked, etc. [MG]
 * New @lock/from and @lock/receive locks, to control who can give to an
   object, and what objects can be given to them, respectively. From a 
   suggestion by Nammyung@M*U*S*H, based on locks on ElendorMUSH. [MG]
 * Changed the restrictions for valid @function names to match what was
   reported by valid(). [MG]

Commands:
 * New @include <obj>/<attr> command, which inserts <attr> into the current
   action list. Patch by Javelin.
 * @scan can now take multiple switches at the same time. [MG]
 * @version now reports the SVN revision of the current version, when 
   available. Suggested by Paige. [MG]
 * @clone can take a garbage dbref for the new object, the same as @create.
   Suggested by Dan. [MG]
 * 'look' now supports more english-matching (look this foo's 1st bar). [MG]
 * You can now look at objects on the other side of transparent exits, with
   "look [toward] <exit>'s <object>". Suggested by Trinsec. [MG]
 * All wizards can now use @command/add. Suggested by qa'toq. [MG]
 * function_alias in alias.cnf now creates a proper alias, not a clone, of
   functions. @function/alias added, which does the same in-game. [MG]
 * New @command/clone and @function/clone commands, which create copies of
   a command/function which initially work the same as, but are independant
   of, the originals. Based on suggestion by Bane. [MG]
 * Added a comment line to the beginning of @decompile's output showing
   the object name and dbref. [MG]
   
Functions:
 * Added strfirstof() and strallof(), which return the first arg/all args
   which are non-empty strings. [MG]
 * Added reglattr[p](), regxattr[p]() and regnattr[p](), regexp variants of 
   lattr[p](), xattr[p]() and nattr[p](). Suggested by Trinsec. [MG]
 * The *emit() functions, and cbufferadd(), are now disabled when
   function_side_effects are off. Suggested by Cheetah. [MG]
 * round() now takes an optional third argument to 0-pad the results if
   needed. Suggested by Trinsec. [SW]
 * Many functions (particularly ones which take only numbers, dbrefs or
   attribute names as arguments) now ignore ANSI in their arguments, rather
   than throwing an error. [MG]
 * nattr()'s <attribute pattern> now defaults to *, not **, the same as
   lattr() and other attribute functions. [MG]
 * clone() can now take a <new name> and <dbref>, as per @clone. [MG]
 * cwho() now takes an optional 3rd argument to omit gagged objects.
   Suggested by Trinsec. [MG]

Attributes:
 * @outpageformat lets you alter how you view pages that you send.

Fixes:
 * isprint() bug in ord() fixed. [GM]
 * Possible crashbug in @destroy fixed. Reported by Dan. [MG]
 * Minor bug in benchmark() fixed. [MG]
 * channels(<object>) was incorrectly sorted for channel names containing
   ansi. Reported by Trelane. [MG]
 * Help fixes by Teal and others. [MG]
 * Minor updates to some README files. [MG]
 * Some typos and translation errors fixed by Stoko.
 * namelist() now ignores null items. Reported by Minion. [MG]
 * The matching code would always perform absolute (dbref) matches, even
   when it wasn't told to. [MG]
 * Improvements to the match flags used by many pieces of code, hopefully
   fixing a number of minor bugs. [MG]
 * Paranoid dumps no longer treat ANSI tags as invalid characters in attrs.
   Reported by Trelane. [MG]
 * The /silent switch for @lemit didn't work. [MG]
 * @decompile/db showed '@create <dbref>' for THINGs, not '@create <name>',
   and @decomp/name could break. Reported by Paige. [MG]
 * Crash bug in locks fixed. Reported by Tanaku. [SW]

